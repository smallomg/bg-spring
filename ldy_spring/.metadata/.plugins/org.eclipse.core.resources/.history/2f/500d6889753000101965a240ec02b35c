package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.dao.IMemberDao;
import com.example.demo.dto.MemberDTO;
import com.example.demo.dto.ReviewDTO;
import com.example.demo.dto.SeatDTO;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

@Controller
public class MemberController {

	@Autowired
	private IMemberDao imemberDao;

	@RequestMapping("/")
	public String root() {
		System.out.println("root");
		return "index";
	}

	// 회원가입 페이지 이동
	@GetMapping("/signup")
	public String signup() {
		System.out.println("회원가입");
		return "signup";
	}

	// 회원 가입 등록
	@PostMapping("/SignUp")
	public String SignUp(MemberDTO member) {
		imemberDao.signup(member);

		return "signin";
	}

	// 아이디 중복 확인
	@GetMapping("/idcheck")
	public @ResponseBody int idcheck(@RequestParam("id") String id) {
		MemberDTO dto = new MemberDTO();
		dto.setId(id);

		int result = imemberDao.idcheck(id);
		if (result > 0) {
			return result;
		} else {
			return result;
		}

	}

	// 로그인 페이지 이동
	@GetMapping("/signin")
	public String signin() {
		System.out.println("로그인 페이지");
		return "signin";
	}

	// 로그인 연결 처리
	@PostMapping("/SignIn")
	public String SignIn(HttpServletRequest request) {
		String id = request.getParameter("id");
		String pw = request.getParameter("pw");

		MemberDTO member = imemberDao.login(id, pw);

		if (member != null) {
			HttpSession session = request.getSession();

			session.setAttribute("member", member);
			session.removeAttribute("admin"); // 관리자 속성 제거
			System.out.println("로그인 하였습니다");
			return "redirect:/main";
		} else {
			return "signin";
		}

	}

	// 로그아웃 처리
	@GetMapping("/logout")
	public String logout(HttpServletRequest request) {
		HttpSession session = request.getSession(false);
		if (session != null) {
			session.invalidate();
		}
		System.out.println("로그아웃 하였습니다");
		return "redirect:/signin";
	}

	// 별점 페이지 이동
	@GetMapping("/review/scoreForm")
	public String scoreForm(@RequestParam("mno") int mno, Model model) {
		// 영화 번호 전달
		model.addAttribute("mno", mno);

		// 해당 영화에 대한 리뷰 목록 불러오기
		List<ReviewDTO> reviews = imemberDao.getReviewList(mno);
		model.addAttribute("reviews", reviews);

		// 전체 예약 자리 보기
		List<SeatDTO> seats = imemberDao.getSeatList();
		model.addAttribute("seats", seats);

		return "scoreForm"; // scoreForm.jsp로 이동
	}

	// 별점 처리
	@PostMapping("/review/scoreInsert")
	public String scoreinsert(ReviewDTO review, HttpServletRequest request) {
		HttpSession session = request.getSession();
		MemberDTO member = (MemberDTO) session.getAttribute("member");

		if (member != null) {
			review.setId(member.getId());
			imemberDao.scroeinsert(review);
			System.out.println("별점 등록 완료");
		} else {
			System.out.println("로그인 정보 없음, 별점 등록 실패");
			return "redirect:/signin";
		}

		// 다시 입력 폼으로 이동
		return "redirect:/review/scoreForm?mno=" + review.getMno();
	}

	// 상영 종료 페이지 이동
	@GetMapping("/review/contentForm")
	public String contentForm(@RequestParam("mno") int mno, Model model) {
		// 영화 번호 전달
		model.addAttribute("mno", mno);

		// 해당 영화에 대한 리뷰 목록 불러오기
		List<ReviewDTO> reviews = imemberDao.getReviewList(mno);
		model.addAttribute("reviews", reviews);

		return "contentForm"; // scoreForm.jsp로 이동
	}

	// 별점 처리
	@PostMapping("/review/contentInsert")
	public String scoreInsert(ReviewDTO review, HttpServletRequest request) {
		HttpSession session = request.getSession();
		MemberDTO member = (MemberDTO) session.getAttribute("member");

		if (member != null) {
			review.setId(member.getId());
			imemberDao.contentForm(review);
			System.out.println("별점 등록 완료");
		} else {
			System.out.println("로그인 정보 없음, 별점 등록 실패");
			return "redirect:/signin";
		}

		// 다시 입력 폼으로 이동
		return "redirect:/review/contentForm?mno=" + review.getMno();
	}

	좌석 정보 없음


	
}
