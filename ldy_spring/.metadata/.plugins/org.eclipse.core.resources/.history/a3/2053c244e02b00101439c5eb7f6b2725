package com.example.demo.json;

import java.io.BufferedReader;
import java.io.InputStreamReader;
// BufferedReader, InputStreamReader는 서버에서 받은 내용을 줄 단위로 읽기 위해 쓰입니다.

import java.net.HttpURLConnection;
import java.net.URL;
// 인터넷에 연결해서 데이터를 가져오려면 URL, HttpURLConnection 같은 네트워크 관련 클래스가 필요해요.

// URLEncoder는 URL에 붙이는 값을 특수문자 없이 인코딩해주기 위해 사용됩니다.
import java.net.URLEncoder;

public class ApiExplorer {

    public static String getJsonResponse() throws Exception {
    	// API 기본 주소를 StringBuilder로 시작합니다.
    	// StringBuilder는 문자열을 효율적으로 연결할 때 쓰는 클래스예요.
        StringBuilder urlBuilder = new StringBuilder("http://apis.data.go.kr/6480000/gyeongnamcultural/gyeongnamculturallist");
        // serviceKey: 서비스 인증용 키.
        urlBuilder.append("?" + URLEncoder.encode("serviceKey", "UTF-8") + "=" + "XyczoMkmgGUArIQjaYCLOd3k1ULL6ERcXleEHaIvIxXlQlQwY512FSK5HopseZ5T6vYYhOHUKhiM6%2BUDCqvMog%3D%3D");
        // pageNo: 페이지 번호 (1페이지).
        urlBuilder.append("&" + URLEncoder.encode("pageNo", "UTF-8") + "=" + URLEncoder.encode("1", "UTF-8"));
        // numOfRows: 한 번에 가져올 항목 수 (10개).
        urlBuilder.append("&" + URLEncoder.encode("numOfRows", "UTF-8") + "=" + URLEncoder.encode("10", "UTF-8"));
        urlBuilder.append("&" + URLEncoder.encode("resultType", "UTF-8") + "=" + URLEncoder.encode("json", "UTF-8"));
        URL url = new URL(urlBuilder.toString());
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        conn.setRequestProperty("Content-type", "application/json");

        BufferedReader rd;
        if (conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
            rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        } else {
            rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
        }
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = rd.readLine()) != null) {
            sb.append(line);
        }
        rd.close();
        conn.disconnect();
        return sb.toString();  // 여기서 JSON 문자열을 리턴함
    }
}
